<link rel="stylesheet" href="/plugins/fakeloader/css/fakeloader.min.css">
<style>
    .spinner {
        width: 44px;
        height: 44px;
        animation: spinner-y0fdc1 2s infinite ease;
        transform-style: preserve-3d;
    }

    .spinner > div {
        background-color: rgba(0, 77, 255, 0.2);
        height: 100%;
        position: absolute;
        width: 100%;
        border: 2px solid #004dff;
    }

    .spinner div:nth-of-type(1) {
        transform: translateZ(-22px) rotateY(180deg);
    }

    .spinner div:nth-of-type(2) {
        transform: rotateY(-270deg) translateX(50%);
        transform-origin: top right;
    }

    .spinner div:nth-of-type(3) {
        transform: rotateY(270deg) translateX(-50%);
        transform-origin: center left;
    }

    .spinner div:nth-of-type(4) {
        transform: rotateX(90deg) translateY(-50%);
        transform-origin: top center;
    }

    .spinner div:nth-of-type(5) {
        transform: rotateX(-90deg) translateY(50%);
        transform-origin: bottom center;
    }

    .spinner div:nth-of-type(6) {
        transform: translateZ(22px);
    }

    @keyframes spinner-y0fdc1 {
        0% {
            transform: rotate(45deg) rotateX(-25deg) rotateY(25deg);
        }

        50% {
            transform: rotate(45deg) rotateX(-385deg) rotateY(25deg);
        }

        100% {
            transform: rotate(45deg) rotateX(-385deg) rotateY(385deg);
        }
    }
</style>
<script src="/plugins/fakeloader/js/fakeloader.js"></script>
<script src="/plugins/jquery/jquery.form.js"></script>
<div id="fake-loader"></div>
<div class="modal fade show" id="success-modal" data-easein="pulse" tabindex="-1" role="dialog"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-success">
            <div class="modal-header">
                <h4 class="modal-title">提示</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                        aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                <p id="success-message-area"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-light pull-left" data-dismiss="modal">取消</button>
                <button type="button" class="btn btn-outline-light" data-dismiss="modal">确定</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<div class="modal fade show" id="danger-modal" data-easein="pulse" tabindex="-1" role="dialog"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-success">
            <div class="modal-header">
                <h4 class="modal-title">提示</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                        aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                <p id="danger-message-area"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-light pull-left" data-dismiss="modal">取消</button>
                <button type="button" class="btn btn-outline-light" data-dismiss="modal">确定</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<script>
    /**
     * 自定义Loading插件
     * @param {Object} config
     * {
     * content[加载显示文本],
     * time[自动关闭等待时间(ms)]
     * }
     * @param {String} config
     * 加载显示文本
     * @refer 依赖 JQuery-1.9.1及以上、Bootstrap-3.3.7及以上
     * @return {KZ_Loading} 对象实例
     */
    function KZ_Loading(config) {
        if (this instanceof KZ_Loading) {
            const domTemplate = '<div class="modal fade kz-loading" style="margin-left: 250px;" data-kzid="@@KZ_Loadin_ID@@" backdrop="static" keyboard="false">' +
                    '<div style="width: 200px;height:20px; z-index: 20000; position: absolute; text-align: center; left: 50%; top: 50%;margin-left:-100px;margin-top:-10px">' +
                    '<div class="spinner"><div></div><div></div> <div></div> <div></div> <div></div> <div></div></div>' +
                    '</div>' +
                    '</div></div>';
            this.config = {
                content: 'loading...',
                time: 0,
            };
            if (config != null) {
                if (typeof config === 'string') {
                    this.config = Object.assign(this.config, {
                        content: config
                    });
                } else if (typeof config === 'object') {
                    this.config = Object.assign(this.config, config);
                }
            }
            this.id = new Date().getTime().toString();
            this.state = 'hide';

            /*显示 */
            this.show = function () {
                $('.kz-loading[data-kzid=' + this.id + ']').modal({
                    backdrop: 'static',
                    keyboard: false
                });
                this.state = 'show';
                if (this.config.time > 0) {
                    var that = this;
                    setTimeout(function () {
                        that.hide();
                    }, this.config.time);
                }
            };
            /*隐藏 */
            this.hide = function (callback) {
                $('.kz-loading[data-kzid=' + this.id + ']').modal('hide');
                this.state = 'hide';
                if (callback) {
                    callback();
                }
            };
            /*销毁dom */
            this.destroy = function () {
                var that = this;
                this.hide(function () {
                    var node = $('.kz-loading[data-kzid=' + that.id + ']');
                    node.next().remove();
                    node.remove();
                    that.show = function () {
                        throw new Error('对象已销毁！');
                    };
                    that.hide = function () {
                    };
                    that.destroy = function () {
                    };
                });
            }

            var domHtml = domTemplate.replace('@@KZ_Loadin_ID@@', this.id).replace('@@KZ_Loading_Text@@', this.config.content);
            $('body').append(domHtml);
        } else {
            return new KZ_Loading(config);
        }
    }
</script>
